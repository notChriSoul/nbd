name: nbd-mongo-redis
services:
    mongo_1:
        build: .
        image: mongocustom:8.0.1
        container_name: mongodb1
        hostname: mongodb1
        networks:
            - mongonet
        ports:
            - "27017:27017"
        environment:
            - MONGO_INITDB_ROOT_USERNAME=nbd
            - MONGO_INITDB_ROOT_PASSWORD=nbdpassword
            - MONGO_INITDB_DATABASE=nbddb
        command: --config /etc/mongod.conf --port 27017
        healthcheck:
            test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--port", "27017" ]
            interval: 10s
            timeout: 2s
            retries: 5
        volumes:
            - mongo-db-data-1:/data/db
            - mongo-configdb-data-1:/data/configdb
    mongo_2:
        build: .
        image: mongocustom:8.0.1
        container_name: mongodb2
        hostname: mongodb2
        networks:
            - mongonet
        ports:
            - "27018:27018"
        environment:
            - MONGO_INITDB_ROOT_USERNAME=nbd
            - MONGO_INITDB_ROOT_PASSWORD=nbdpassword
            - MONGO_INITDB_DATABASE=nbddb
        command: --config /etc/mongod.conf --port 27018
        healthcheck:
            test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--port", "27018" ]
            interval: 10s
            timeout: 2s
            retries: 5
        volumes:
            - mongo-db-data-2:/data/db
            - mongo-configdb-data-2:/data/configdb
    mongo_3:
        build: .
        image: mongocustom:8.0.1
        container_name: mongodb3
        hostname: mongodb3
        networks:
            - mongonet
        ports:
            - "27019:27019"
        environment:
            - MONGO_INITDB_ROOT_USERNAME=nbd
            - MONGO_INITDB_ROOT_PASSWORD=nbdpassword
            - MONGO_INITDB_DATABASE=nbddb
        command: --config /etc/mongod.conf --port 27019
        healthcheck:
            test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--port", "27019" ]
            interval: 10s
            timeout: 2s
            retries: 5
        volumes:
            - mongo-db-data-3:/data/db
            - mongo-configdb-data-3:/data/configdb
    mongoinit:
        build: .
        image: mongocustom:8.0.1
        restart: on-failure
        container_name: mongodbinit
        hostname: mongodbinit
        networks:
            - mongonet
        depends_on:
            mongo_1:
                condition: service_healthy
            mongo_2:
                condition: service_healthy
            mongo_3:
                condition: service_healthy
        command: >
            mongosh --host mongodb1:27017 --username nbd --password nbdpassword --authenticationDatabase admin --eval
              '
              rs.initiate(
                {
                  _id: "replica_set_single",
                  version: 1,
                  members: [
                    { _id: 0, host: "mongodb1:27017" },
                    { _id: 1, host: "mongodb2:27018" },
                    { _id: 2, host: "mongodb3:27019" }
                  ]
                }
              );
              '
        volumes:
            - mongo-db-data-1:/data/db:ro
            - mongo-configdb-data-1:/data/configdb:ro
            - mongo-db-data-2:/data/db:ro
            - mongo-configdb-data-2:/data/configdb:ro
            - mongo-db-data-3:/data/db:ro
            - mongo-configdb-data-3:/data/configdb:ro
    redis-stack:
        image: redis/redis-stack:7.4.0-v1
        container_name: redis-stack
        volumes:
            -   redis-stack-data:/bitnami/redis/data
        ports:
            - "8001:8001"
            - "6379:6379"
        networks:
            - redisnet

volumes:
    mongo-db-data-1:
    mongo-configdb-data-1:
    mongo-db-data-2:
    mongo-configdb-data-2:
    mongo-db-data-3:
    mongo-configdb-data-3:
    redis-stack-data:
        driver: local

networks:
    mongonet: { }
    redisnet: { }