package org.example.managers;

import org.example.Client;
import org.example.DAO.ClientDAO;
import jakarta.persistence.OptimisticLockException;

public class ClientManager {

    private final ClientDAO clientDAO;

    // Constructor
    public ClientManager() {
        this.clientDAO = new ClientDAO();
    }

    // CREATE - Add a new client
    public int createClient(String firstName, String lastName) {
        Client client = new Client(0, firstName, lastName); // ID will be generated by the database
        try {
            clientDAO.saveClient(client);
            System.out.println("Client created successfully: " + firstName + " " + lastName);
        } catch (OptimisticLockException ole) {
            System.err.println("Error while saving client (Optimistic Lock): " + ole.getMessage());
        }
        return client.getPersonalId();
    }

    // READ - Get client by ID
    public Client getClient(int personalId) {
        Client client = clientDAO.getClient(personalId);
        if (client != null) {
            System.out.println("Client found: " + client.getFirstName() + " " + client.getLastName());
        } else {
            System.out.println("Client not found for ID: " + personalId);
        }
        return client;
    }

    // UPDATE - Update client's information
    public void updateClient(int personalId, String newFirstName, String newLastName) {
        try {
            Client client = clientDAO.getClient(personalId);
            if (client != null) {
                client.setFirstName(newFirstName);
                client.setLastName(newLastName);
                clientDAO.updateClient(client);
                System.out.println("Client updated successfully: " + newFirstName + " " + newLastName);
            } else {
                System.out.println("Client not found for update with ID: " + personalId);
            }
        } catch (OptimisticLockException ole) {
            System.err.println("Error while updating client (Optimistic Lock): " + ole.getMessage());
        }
    }

    // DELETE - Remove client by ID
    public void deleteClient(int personalId) {
        try {
            clientDAO.deleteClient(personalId);
            System.out.println("Client deleted successfully with ID: " + personalId);
        } catch (OptimisticLockException ole) {
            System.err.println("Error while deleting client (Optimistic Lock): " + ole.getMessage());
        }
    }
}
